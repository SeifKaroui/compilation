package com.compilation.parser;
import com.compilation.lexer.Token;
import com.compilation.parser.Action.Accept;
import com.compilation.parser.Action.ErrorAction;
import com.compilation.parser.Action.Reduce;
import com.compilation.parser.Action.Shift;
import java.util.ArrayList;
import java.util.HashMap;

public class SlrTable {
  private ArrayList<HashMap<String, Action>> actionsTable = new ArrayList<>();
  private ArrayList<HashMap<String, Integer>> succTable = new ArrayList<HashMap<String, Integer>>();

  public int getSuccessor(int state, String nonTerminal) {

    if (0 <= state && state < actionsTable.size()) {

      // System.out.println("getting succ for " + state + " : " + nonTerminal);
      HashMap<String, Integer> map = succTable.get(state);
      if (map.containsKey(nonTerminal)) {

        return map.get(nonTerminal);
      } else {

        System.err.println("State invalid: " + state);
        return -1;
      }
    } else {
      System.err.println("State invalid: " + state);
      return -1;
    }
  }

  public Action getAction(int state, Token token) {
    String key;
    switch (token.tokentype) {
      case Identifier:
        key = "id";
        break;
      case IntegerLiteral:
        key = "intLiteral";
        break;
      case FloatLiteral:
        key = "floatLiteral";
        break;

      default:
        key = token.value;
        break;
    }

    // System.out.println("getting action for " + state + " : " + key);

    if (0 <= state && state < actionsTable.size()) {
      HashMap<String, Action> map = actionsTable.get(state);

      // System.out.println("getting action for " + state + " " + key);
      if (map.containsKey(key)) {
        return map.get(key);
      } else {

        return new ErrorAction();
      }
    } else {
      System.err.println("State invalid: " + state);
      return new ErrorAction();
    }
  }

  public SlrTable() {
    HashMap<String, Action> stateAction0 = new HashMap<>();
    stateAction0.put("var", new Shift(2));
    stateAction0.put("$", new Reduce(2));
    stateAction0.put("id", new Reduce(2));
    stateAction0.put("read", new Reduce(2));
    stateAction0.put("write", new Reduce(2));
    stateAction0.put("if", new Reduce(2));
    stateAction0.put("while", new Reduce(2));
    HashMap<String, Action> stateAction1 = new HashMap<>();
    stateAction1.put("id", new Shift(5));
    stateAction1.put("read", new Shift(6));
    stateAction1.put("write", new Shift(7));
    stateAction1.put("if", new Shift(8));
    stateAction1.put("while", new Shift(9));
    stateAction1.put("$", new Reduce(4));
    stateAction1.put("endif", new Reduce(4));
    stateAction1.put("else", new Reduce(4));
    stateAction1.put("endwhile", new Reduce(4));
    HashMap<String, Action> stateAction2 = new HashMap<>();
    stateAction2.put("id", new Shift(10));
    HashMap<String, Action> stateAction3 = new HashMap<>();
    stateAction3.put("$", new Accept());
    HashMap<String, Action> stateAction4 = new HashMap<>();
    stateAction4.put("id", new Shift(5));
    stateAction4.put("read", new Shift(6));
    stateAction4.put("write", new Shift(7));
    stateAction4.put("if", new Shift(8));
    stateAction4.put("while", new Shift(9));
    stateAction4.put("$", new Reduce(4));
    stateAction4.put("endif", new Reduce(4));
    stateAction4.put("else", new Reduce(4));
    stateAction4.put("endwhile", new Reduce(4));
    HashMap<String, Action> stateAction5 = new HashMap<>();
    stateAction5.put(":=", new Shift(12));
    stateAction5.put("[", new Shift(13));
    HashMap<String, Action> stateAction6 = new HashMap<>();
    stateAction6.put("(", new Shift(14));
    HashMap<String, Action> stateAction7 = new HashMap<>();
    stateAction7.put("(", new Shift(15));
    HashMap<String, Action> stateAction8 = new HashMap<>();
    stateAction8.put("(", new Shift(18));
    stateAction8.put("id", new Shift(19));
    stateAction8.put("intLiteral", new Shift(20));
    stateAction8.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction9 = new HashMap<>();
    stateAction9.put("(", new Shift(18));
    stateAction9.put("id", new Shift(19));
    stateAction9.put("intLiteral", new Shift(20));
    stateAction9.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction10 = new HashMap<>();
    stateAction10.put(":", new Shift(23));
    HashMap<String, Action> stateAction11 = new HashMap<>();
    stateAction11.put("$", new Reduce(3));
    stateAction11.put("endif", new Reduce(3));
    stateAction11.put("else", new Reduce(3));
    stateAction11.put("endwhile", new Reduce(3));
    HashMap<String, Action> stateAction12 = new HashMap<>();
    stateAction12.put("(", new Shift(18));
    stateAction12.put("id", new Shift(19));
    stateAction12.put("intLiteral", new Shift(20));
    stateAction12.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction13 = new HashMap<>();
    stateAction13.put("intLiteral", new Shift(26));
    stateAction13.put("id", new Shift(27));
    HashMap<String, Action> stateAction14 = new HashMap<>();
    stateAction14.put("id", new Shift(28));
    HashMap<String, Action> stateAction15 = new HashMap<>();
    stateAction15.put("(", new Shift(18));
    stateAction15.put("id", new Shift(19));
    stateAction15.put("intLiteral", new Shift(20));
    stateAction15.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction16 = new HashMap<>();
    stateAction16.put("then", new Shift(30));
    stateAction16.put("+", new Shift(35));
    stateAction16.put("-", new Shift(36));
    stateAction16.put("*", new Shift(37));
    stateAction16.put("/", new Shift(38));
    stateAction16.put("%", new Shift(39));
    stateAction16.put(">=", new Shift(40));
    stateAction16.put(">", new Shift(41));
    stateAction16.put("<=", new Shift(42));
    stateAction16.put("<", new Shift(43));
    stateAction16.put("=", new Shift(44));
    stateAction16.put("!=", new Shift(45));
    stateAction16.put("||", new Shift(46));
    stateAction16.put("&&", new Shift(47));
    HashMap<String, Action> stateAction17 = new HashMap<>();
    stateAction17.put(";", new Reduce(16));
    stateAction17.put(")", new Reduce(16));
    stateAction17.put("then", new Reduce(16));
    stateAction17.put("do", new Reduce(16));
    stateAction17.put("+", new Reduce(16));
    stateAction17.put("-", new Reduce(16));
    stateAction17.put("*", new Reduce(16));
    stateAction17.put("/", new Reduce(16));
    stateAction17.put("%", new Reduce(16));
    stateAction17.put(">=", new Reduce(16));
    stateAction17.put(">", new Reduce(16));
    stateAction17.put("<=", new Reduce(16));
    stateAction17.put("<", new Reduce(16));
    stateAction17.put("=", new Reduce(16));
    stateAction17.put("!=", new Reduce(16));
    stateAction17.put("||", new Reduce(16));
    stateAction17.put("&&", new Reduce(16));
    HashMap<String, Action> stateAction18 = new HashMap<>();
    stateAction18.put("(", new Shift(18));
    stateAction18.put("id", new Shift(19));
    stateAction18.put("intLiteral", new Shift(20));
    stateAction18.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction19 = new HashMap<>();
    stateAction19.put("[", new Shift(49));
    stateAction19.put(";", new Reduce(21));
    stateAction19.put(")", new Reduce(21));
    stateAction19.put("then", new Reduce(21));
    stateAction19.put("do", new Reduce(21));
    stateAction19.put("+", new Reduce(21));
    stateAction19.put("-", new Reduce(21));
    stateAction19.put("*", new Reduce(21));
    stateAction19.put("/", new Reduce(21));
    stateAction19.put("%", new Reduce(21));
    stateAction19.put(">=", new Reduce(21));
    stateAction19.put(">", new Reduce(21));
    stateAction19.put("<=", new Reduce(21));
    stateAction19.put("<", new Reduce(21));
    stateAction19.put("=", new Reduce(21));
    stateAction19.put("!=", new Reduce(21));
    stateAction19.put("||", new Reduce(21));
    stateAction19.put("&&", new Reduce(21));
    HashMap<String, Action> stateAction20 = new HashMap<>();
    stateAction20.put(";", new Reduce(19));
    stateAction20.put(")", new Reduce(19));
    stateAction20.put("then", new Reduce(19));
    stateAction20.put("do", new Reduce(19));
    stateAction20.put("+", new Reduce(19));
    stateAction20.put("-", new Reduce(19));
    stateAction20.put("*", new Reduce(19));
    stateAction20.put("/", new Reduce(19));
    stateAction20.put("%", new Reduce(19));
    stateAction20.put(">=", new Reduce(19));
    stateAction20.put(">", new Reduce(19));
    stateAction20.put("<=", new Reduce(19));
    stateAction20.put("<", new Reduce(19));
    stateAction20.put("=", new Reduce(19));
    stateAction20.put("!=", new Reduce(19));
    stateAction20.put("||", new Reduce(19));
    stateAction20.put("&&", new Reduce(19));
    HashMap<String, Action> stateAction21 = new HashMap<>();
    stateAction21.put(";", new Reduce(20));
    stateAction21.put(")", new Reduce(20));
    stateAction21.put("then", new Reduce(20));
    stateAction21.put("do", new Reduce(20));
    stateAction21.put("+", new Reduce(20));
    stateAction21.put("-", new Reduce(20));
    stateAction21.put("*", new Reduce(20));
    stateAction21.put("/", new Reduce(20));
    stateAction21.put("%", new Reduce(20));
    stateAction21.put(">=", new Reduce(20));
    stateAction21.put(">", new Reduce(20));
    stateAction21.put("<=", new Reduce(20));
    stateAction21.put("<", new Reduce(20));
    stateAction21.put("=", new Reduce(20));
    stateAction21.put("!=", new Reduce(20));
    stateAction21.put("||", new Reduce(20));
    stateAction21.put("&&", new Reduce(20));
    HashMap<String, Action> stateAction22 = new HashMap<>();
    stateAction22.put("do", new Shift(50));
    stateAction22.put("+", new Shift(35));
    stateAction22.put("-", new Shift(36));
    stateAction22.put("*", new Shift(37));
    stateAction22.put("/", new Shift(38));
    stateAction22.put("%", new Shift(39));
    stateAction22.put(">=", new Shift(40));
    stateAction22.put(">", new Shift(41));
    stateAction22.put("<=", new Shift(42));
    stateAction22.put("<", new Shift(43));
    stateAction22.put("=", new Shift(44));
    stateAction22.put("!=", new Shift(45));
    stateAction22.put("||", new Shift(46));
    stateAction22.put("&&", new Shift(47));
    HashMap<String, Action> stateAction23 = new HashMap<>();
    stateAction23.put("array", new Shift(53));
    stateAction23.put("int", new Shift(54));
    stateAction23.put("float", new Shift(55));
    HashMap<String, Action> stateAction24 = new HashMap<>();
    stateAction24.put(";", new Shift(56));
    stateAction24.put("+", new Shift(35));
    stateAction24.put("-", new Shift(36));
    stateAction24.put("*", new Shift(37));
    stateAction24.put("/", new Shift(38));
    stateAction24.put("%", new Shift(39));
    stateAction24.put(">=", new Shift(40));
    stateAction24.put(">", new Shift(41));
    stateAction24.put("<=", new Shift(42));
    stateAction24.put("<", new Shift(43));
    stateAction24.put("=", new Shift(44));
    stateAction24.put("!=", new Shift(45));
    stateAction24.put("||", new Shift(46));
    stateAction24.put("&&", new Shift(47));
    HashMap<String, Action> stateAction25 = new HashMap<>();
    stateAction25.put("]", new Shift(57));
    HashMap<String, Action> stateAction26 = new HashMap<>();
    stateAction26.put("]", new Reduce(26));
    HashMap<String, Action> stateAction27 = new HashMap<>();
    stateAction27.put("]", new Reduce(27));
    HashMap<String, Action> stateAction28 = new HashMap<>();
    stateAction28.put(")", new Shift(58));
    HashMap<String, Action> stateAction29 = new HashMap<>();
    stateAction29.put(")", new Shift(59));
    stateAction29.put("+", new Shift(35));
    stateAction29.put("-", new Shift(36));
    stateAction29.put("*", new Shift(37));
    stateAction29.put("/", new Shift(38));
    stateAction29.put("%", new Shift(39));
    stateAction29.put(">=", new Shift(40));
    stateAction29.put(">", new Shift(41));
    stateAction29.put("<=", new Shift(42));
    stateAction29.put("<", new Shift(43));
    stateAction29.put("=", new Shift(44));
    stateAction29.put("!=", new Shift(45));
    stateAction29.put("||", new Shift(46));
    stateAction29.put("&&", new Shift(47));
    HashMap<String, Action> stateAction30 = new HashMap<>();
    stateAction30.put("id", new Shift(5));
    stateAction30.put("read", new Shift(6));
    stateAction30.put("write", new Shift(7));
    stateAction30.put("if", new Shift(8));
    stateAction30.put("while", new Shift(9));
    stateAction30.put("$", new Reduce(4));
    stateAction30.put("endif", new Reduce(4));
    stateAction30.put("else", new Reduce(4));
    stateAction30.put("endwhile", new Reduce(4));
    HashMap<String, Action> stateAction31 = new HashMap<>();
    stateAction31.put("(", new Shift(18));
    stateAction31.put("id", new Shift(19));
    stateAction31.put("intLiteral", new Shift(20));
    stateAction31.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction32 = new HashMap<>();
    stateAction32.put("(", new Shift(18));
    stateAction32.put("id", new Shift(19));
    stateAction32.put("intLiteral", new Shift(20));
    stateAction32.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction33 = new HashMap<>();
    stateAction33.put("(", new Shift(18));
    stateAction33.put("id", new Shift(19));
    stateAction33.put("intLiteral", new Shift(20));
    stateAction33.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction34 = new HashMap<>();
    stateAction34.put("(", new Shift(18));
    stateAction34.put("id", new Shift(19));
    stateAction34.put("intLiteral", new Shift(20));
    stateAction34.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction35 = new HashMap<>();
    stateAction35.put("(", new Reduce(28));
    stateAction35.put("id", new Reduce(28));
    stateAction35.put("intLiteral", new Reduce(28));
    stateAction35.put("floatLiteral", new Reduce(28));
    HashMap<String, Action> stateAction36 = new HashMap<>();
    stateAction36.put("(", new Reduce(29));
    stateAction36.put("id", new Reduce(29));
    stateAction36.put("intLiteral", new Reduce(29));
    stateAction36.put("floatLiteral", new Reduce(29));
    HashMap<String, Action> stateAction37 = new HashMap<>();
    stateAction37.put("(", new Reduce(30));
    stateAction37.put("id", new Reduce(30));
    stateAction37.put("intLiteral", new Reduce(30));
    stateAction37.put("floatLiteral", new Reduce(30));
    HashMap<String, Action> stateAction38 = new HashMap<>();
    stateAction38.put("(", new Reduce(31));
    stateAction38.put("id", new Reduce(31));
    stateAction38.put("intLiteral", new Reduce(31));
    stateAction38.put("floatLiteral", new Reduce(31));
    HashMap<String, Action> stateAction39 = new HashMap<>();
    stateAction39.put("(", new Reduce(32));
    stateAction39.put("id", new Reduce(32));
    stateAction39.put("intLiteral", new Reduce(32));
    stateAction39.put("floatLiteral", new Reduce(32));
    HashMap<String, Action> stateAction40 = new HashMap<>();
    stateAction40.put("(", new Reduce(33));
    stateAction40.put("id", new Reduce(33));
    stateAction40.put("intLiteral", new Reduce(33));
    stateAction40.put("floatLiteral", new Reduce(33));
    HashMap<String, Action> stateAction41 = new HashMap<>();
    stateAction41.put("(", new Reduce(34));
    stateAction41.put("id", new Reduce(34));
    stateAction41.put("intLiteral", new Reduce(34));
    stateAction41.put("floatLiteral", new Reduce(34));
    HashMap<String, Action> stateAction42 = new HashMap<>();
    stateAction42.put("(", new Reduce(35));
    stateAction42.put("id", new Reduce(35));
    stateAction42.put("intLiteral", new Reduce(35));
    stateAction42.put("floatLiteral", new Reduce(35));
    HashMap<String, Action> stateAction43 = new HashMap<>();
    stateAction43.put("(", new Reduce(36));
    stateAction43.put("id", new Reduce(36));
    stateAction43.put("intLiteral", new Reduce(36));
    stateAction43.put("floatLiteral", new Reduce(36));
    HashMap<String, Action> stateAction44 = new HashMap<>();
    stateAction44.put("(", new Reduce(37));
    stateAction44.put("id", new Reduce(37));
    stateAction44.put("intLiteral", new Reduce(37));
    stateAction44.put("floatLiteral", new Reduce(37));
    HashMap<String, Action> stateAction45 = new HashMap<>();
    stateAction45.put("(", new Reduce(38));
    stateAction45.put("id", new Reduce(38));
    stateAction45.put("intLiteral", new Reduce(38));
    stateAction45.put("floatLiteral", new Reduce(38));
    HashMap<String, Action> stateAction46 = new HashMap<>();
    stateAction46.put("(", new Reduce(39));
    stateAction46.put("id", new Reduce(39));
    stateAction46.put("intLiteral", new Reduce(39));
    stateAction46.put("floatLiteral", new Reduce(39));
    HashMap<String, Action> stateAction47 = new HashMap<>();
    stateAction47.put("(", new Reduce(40));
    stateAction47.put("id", new Reduce(40));
    stateAction47.put("intLiteral", new Reduce(40));
    stateAction47.put("floatLiteral", new Reduce(40));
    HashMap<String, Action> stateAction48 = new HashMap<>();
    stateAction48.put(")", new Shift(65));
    stateAction48.put("+", new Shift(35));
    stateAction48.put("-", new Shift(36));
    stateAction48.put("*", new Shift(37));
    stateAction48.put("/", new Shift(38));
    stateAction48.put("%", new Shift(39));
    stateAction48.put(">=", new Shift(40));
    stateAction48.put(">", new Shift(41));
    stateAction48.put("<=", new Shift(42));
    stateAction48.put("<", new Shift(43));
    stateAction48.put("=", new Shift(44));
    stateAction48.put("!=", new Shift(45));
    stateAction48.put("||", new Shift(46));
    stateAction48.put("&&", new Shift(47));
    HashMap<String, Action> stateAction49 = new HashMap<>();
    stateAction49.put("intLiteral", new Shift(26));
    stateAction49.put("id", new Shift(27));
    HashMap<String, Action> stateAction50 = new HashMap<>();
    stateAction50.put("id", new Shift(5));
    stateAction50.put("read", new Shift(6));
    stateAction50.put("write", new Shift(7));
    stateAction50.put("if", new Shift(8));
    stateAction50.put("while", new Shift(9));
    stateAction50.put("$", new Reduce(4));
    stateAction50.put("endif", new Reduce(4));
    stateAction50.put("else", new Reduce(4));
    stateAction50.put("endwhile", new Reduce(4));
    HashMap<String, Action> stateAction51 = new HashMap<>();
    stateAction51.put(";", new Shift(68));
    HashMap<String, Action> stateAction52 = new HashMap<>();
    stateAction52.put(";", new Reduce(22));
    HashMap<String, Action> stateAction53 = new HashMap<>();
    stateAction53.put("[", new Shift(69));
    HashMap<String, Action> stateAction54 = new HashMap<>();
    stateAction54.put(";", new Reduce(24));
    HashMap<String, Action> stateAction55 = new HashMap<>();
    stateAction55.put(";", new Reduce(25));
    HashMap<String, Action> stateAction56 = new HashMap<>();
    stateAction56.put("$", new Reduce(5));
    stateAction56.put("id", new Reduce(5));
    stateAction56.put("read", new Reduce(5));
    stateAction56.put("write", new Reduce(5));
    stateAction56.put("if", new Reduce(5));
    stateAction56.put("while", new Reduce(5));
    stateAction56.put("endif", new Reduce(5));
    stateAction56.put("else", new Reduce(5));
    stateAction56.put("endwhile", new Reduce(5));
    HashMap<String, Action> stateAction57 = new HashMap<>();
    stateAction57.put(":=", new Shift(70));
    HashMap<String, Action> stateAction58 = new HashMap<>();
    stateAction58.put(";", new Shift(71));
    HashMap<String, Action> stateAction59 = new HashMap<>();
    stateAction59.put(";", new Shift(72));
    HashMap<String, Action> stateAction60 = new HashMap<>();
    stateAction60.put("endif", new Shift(73));
    stateAction60.put("else", new Shift(74));
    HashMap<String, Action> stateAction61 = new HashMap<>();
    stateAction61.put(";", new Reduce(12));
    stateAction61.put(")", new Reduce(12));
    stateAction61.put("then", new Reduce(12));
    stateAction61.put("do", new Reduce(12));
    stateAction61.put("+", new Reduce(12));
    stateAction61.put("-", new Reduce(12));
    stateAction61.put("*", new Reduce(12));
    stateAction61.put("/", new Reduce(12));
    stateAction61.put("%", new Reduce(12));
    stateAction61.put(">=", new Reduce(12));
    stateAction61.put(">", new Reduce(12));
    stateAction61.put("<=", new Reduce(12));
    stateAction61.put("<", new Reduce(12));
    stateAction61.put("=", new Reduce(12));
    stateAction61.put("!=", new Reduce(12));
    stateAction61.put("||", new Reduce(12));
    stateAction61.put("&&", new Reduce(12));
    HashMap<String, Action> stateAction62 = new HashMap<>();
    stateAction62.put(";", new Reduce(13));
    stateAction62.put(")", new Reduce(13));
    stateAction62.put("then", new Reduce(13));
    stateAction62.put("do", new Reduce(13));
    stateAction62.put("+", new Reduce(13));
    stateAction62.put("-", new Reduce(13));
    stateAction62.put("*", new Reduce(13));
    stateAction62.put("/", new Reduce(13));
    stateAction62.put("%", new Reduce(13));
    stateAction62.put(">=", new Reduce(13));
    stateAction62.put(">", new Reduce(13));
    stateAction62.put("<=", new Reduce(13));
    stateAction62.put("<", new Reduce(13));
    stateAction62.put("=", new Reduce(13));
    stateAction62.put("!=", new Reduce(13));
    stateAction62.put("||", new Reduce(13));
    stateAction62.put("&&", new Reduce(13));
    HashMap<String, Action> stateAction63 = new HashMap<>();
    stateAction63.put(";", new Reduce(14));
    stateAction63.put(")", new Reduce(14));
    stateAction63.put("then", new Reduce(14));
    stateAction63.put("do", new Reduce(14));
    stateAction63.put("+", new Reduce(14));
    stateAction63.put("-", new Reduce(14));
    stateAction63.put("*", new Reduce(14));
    stateAction63.put("/", new Reduce(14));
    stateAction63.put("%", new Reduce(14));
    stateAction63.put(">=", new Reduce(14));
    stateAction63.put(">", new Reduce(14));
    stateAction63.put("<=", new Reduce(14));
    stateAction63.put("<", new Reduce(14));
    stateAction63.put("=", new Reduce(14));
    stateAction63.put("!=", new Reduce(14));
    stateAction63.put("||", new Reduce(14));
    stateAction63.put("&&", new Reduce(14));
    HashMap<String, Action> stateAction64 = new HashMap<>();
    stateAction64.put(";", new Reduce(15));
    stateAction64.put(")", new Reduce(15));
    stateAction64.put("then", new Reduce(15));
    stateAction64.put("do", new Reduce(15));
    stateAction64.put("+", new Reduce(15));
    stateAction64.put("-", new Reduce(15));
    stateAction64.put("*", new Reduce(15));
    stateAction64.put("/", new Reduce(15));
    stateAction64.put("%", new Reduce(15));
    stateAction64.put(">=", new Reduce(15));
    stateAction64.put(">", new Reduce(15));
    stateAction64.put("<=", new Reduce(15));
    stateAction64.put("<", new Reduce(15));
    stateAction64.put("=", new Reduce(15));
    stateAction64.put("!=", new Reduce(15));
    stateAction64.put("||", new Reduce(15));
    stateAction64.put("&&", new Reduce(15));
    HashMap<String, Action> stateAction65 = new HashMap<>();
    stateAction65.put(";", new Reduce(17));
    stateAction65.put(")", new Reduce(17));
    stateAction65.put("then", new Reduce(17));
    stateAction65.put("do", new Reduce(17));
    stateAction65.put("+", new Reduce(17));
    stateAction65.put("-", new Reduce(17));
    stateAction65.put("*", new Reduce(17));
    stateAction65.put("/", new Reduce(17));
    stateAction65.put("%", new Reduce(17));
    stateAction65.put(">=", new Reduce(17));
    stateAction65.put(">", new Reduce(17));
    stateAction65.put("<=", new Reduce(17));
    stateAction65.put("<", new Reduce(17));
    stateAction65.put("=", new Reduce(17));
    stateAction65.put("!=", new Reduce(17));
    stateAction65.put("||", new Reduce(17));
    stateAction65.put("&&", new Reduce(17));
    HashMap<String, Action> stateAction66 = new HashMap<>();
    stateAction66.put("]", new Shift(75));
    HashMap<String, Action> stateAction67 = new HashMap<>();
    stateAction67.put("endwhile", new Shift(76));
    HashMap<String, Action> stateAction68 = new HashMap<>();
    stateAction68.put("var", new Shift(2));
    stateAction68.put("$", new Reduce(2));
    stateAction68.put("id", new Reduce(2));
    stateAction68.put("read", new Reduce(2));
    stateAction68.put("write", new Reduce(2));
    stateAction68.put("if", new Reduce(2));
    stateAction68.put("while", new Reduce(2));
    HashMap<String, Action> stateAction69 = new HashMap<>();
    stateAction69.put("intLiteral", new Shift(78));
    HashMap<String, Action> stateAction70 = new HashMap<>();
    stateAction70.put("(", new Shift(18));
    stateAction70.put("id", new Shift(19));
    stateAction70.put("intLiteral", new Shift(20));
    stateAction70.put("floatLiteral", new Shift(21));
    HashMap<String, Action> stateAction71 = new HashMap<>();
    stateAction71.put("$", new Reduce(7));
    stateAction71.put("id", new Reduce(7));
    stateAction71.put("read", new Reduce(7));
    stateAction71.put("write", new Reduce(7));
    stateAction71.put("if", new Reduce(7));
    stateAction71.put("while", new Reduce(7));
    stateAction71.put("endif", new Reduce(7));
    stateAction71.put("else", new Reduce(7));
    stateAction71.put("endwhile", new Reduce(7));
    HashMap<String, Action> stateAction72 = new HashMap<>();
    stateAction72.put("$", new Reduce(8));
    stateAction72.put("id", new Reduce(8));
    stateAction72.put("read", new Reduce(8));
    stateAction72.put("write", new Reduce(8));
    stateAction72.put("if", new Reduce(8));
    stateAction72.put("while", new Reduce(8));
    stateAction72.put("endif", new Reduce(8));
    stateAction72.put("else", new Reduce(8));
    stateAction72.put("endwhile", new Reduce(8));
    HashMap<String, Action> stateAction73 = new HashMap<>();
    stateAction73.put("$", new Reduce(9));
    stateAction73.put("id", new Reduce(9));
    stateAction73.put("read", new Reduce(9));
    stateAction73.put("write", new Reduce(9));
    stateAction73.put("if", new Reduce(9));
    stateAction73.put("while", new Reduce(9));
    stateAction73.put("endif", new Reduce(9));
    stateAction73.put("else", new Reduce(9));
    stateAction73.put("endwhile", new Reduce(9));
    HashMap<String, Action> stateAction74 = new HashMap<>();
    stateAction74.put("id", new Shift(5));
    stateAction74.put("read", new Shift(6));
    stateAction74.put("write", new Shift(7));
    stateAction74.put("if", new Shift(8));
    stateAction74.put("while", new Shift(9));
    stateAction74.put("$", new Reduce(4));
    stateAction74.put("endif", new Reduce(4));
    stateAction74.put("else", new Reduce(4));
    stateAction74.put("endwhile", new Reduce(4));
    HashMap<String, Action> stateAction75 = new HashMap<>();
    stateAction75.put(";", new Reduce(18));
    stateAction75.put(")", new Reduce(18));
    stateAction75.put("then", new Reduce(18));
    stateAction75.put("do", new Reduce(18));
    stateAction75.put("+", new Reduce(18));
    stateAction75.put("-", new Reduce(18));
    stateAction75.put("*", new Reduce(18));
    stateAction75.put("/", new Reduce(18));
    stateAction75.put("%", new Reduce(18));
    stateAction75.put(">=", new Reduce(18));
    stateAction75.put(">", new Reduce(18));
    stateAction75.put("<=", new Reduce(18));
    stateAction75.put("<", new Reduce(18));
    stateAction75.put("=", new Reduce(18));
    stateAction75.put("!=", new Reduce(18));
    stateAction75.put("||", new Reduce(18));
    stateAction75.put("&&", new Reduce(18));
    HashMap<String, Action> stateAction76 = new HashMap<>();
    stateAction76.put("$", new Reduce(11));
    stateAction76.put("id", new Reduce(11));
    stateAction76.put("read", new Reduce(11));
    stateAction76.put("write", new Reduce(11));
    stateAction76.put("if", new Reduce(11));
    stateAction76.put("while", new Reduce(11));
    stateAction76.put("endif", new Reduce(11));
    stateAction76.put("else", new Reduce(11));
    stateAction76.put("endwhile", new Reduce(11));
    HashMap<String, Action> stateAction77 = new HashMap<>();
    stateAction77.put("$", new Reduce(1));
    stateAction77.put("id", new Reduce(1));
    stateAction77.put("read", new Reduce(1));
    stateAction77.put("write", new Reduce(1));
    stateAction77.put("if", new Reduce(1));
    stateAction77.put("while", new Reduce(1));
    HashMap<String, Action> stateAction78 = new HashMap<>();
    stateAction78.put("]", new Shift(81));
    HashMap<String, Action> stateAction79 = new HashMap<>();
    stateAction79.put(";", new Shift(82));
    stateAction79.put("+", new Shift(35));
    stateAction79.put("-", new Shift(36));
    stateAction79.put("*", new Shift(37));
    stateAction79.put("/", new Shift(38));
    stateAction79.put("%", new Shift(39));
    stateAction79.put(">=", new Shift(40));
    stateAction79.put(">", new Shift(41));
    stateAction79.put("<=", new Shift(42));
    stateAction79.put("<", new Shift(43));
    stateAction79.put("=", new Shift(44));
    stateAction79.put("!=", new Shift(45));
    stateAction79.put("||", new Shift(46));
    stateAction79.put("&&", new Shift(47));
    HashMap<String, Action> stateAction80 = new HashMap<>();
    stateAction80.put("endif", new Shift(83));
    HashMap<String, Action> stateAction81 = new HashMap<>();
    stateAction81.put("of", new Shift(84));
    HashMap<String, Action> stateAction82 = new HashMap<>();
    stateAction82.put("$", new Reduce(6));
    stateAction82.put("id", new Reduce(6));
    stateAction82.put("read", new Reduce(6));
    stateAction82.put("write", new Reduce(6));
    stateAction82.put("if", new Reduce(6));
    stateAction82.put("while", new Reduce(6));
    stateAction82.put("endif", new Reduce(6));
    stateAction82.put("else", new Reduce(6));
    stateAction82.put("endwhile", new Reduce(6));
    HashMap<String, Action> stateAction83 = new HashMap<>();
    stateAction83.put("$", new Reduce(10));
    stateAction83.put("id", new Reduce(10));
    stateAction83.put("read", new Reduce(10));
    stateAction83.put("write", new Reduce(10));
    stateAction83.put("if", new Reduce(10));
    stateAction83.put("while", new Reduce(10));
    stateAction83.put("endif", new Reduce(10));
    stateAction83.put("else", new Reduce(10));
    stateAction83.put("endwhile", new Reduce(10));
    HashMap<String, Action> stateAction84 = new HashMap<>();
    stateAction84.put("int", new Shift(54));
    stateAction84.put("float", new Shift(55));
    HashMap<String, Action> stateAction85 = new HashMap<>();
    stateAction85.put(";", new Reduce(23));

    //
    actionsTable.add(stateAction0);
    actionsTable.add(stateAction1);
    actionsTable.add(stateAction2);
    actionsTable.add(stateAction3);
    actionsTable.add(stateAction4);
    actionsTable.add(stateAction5);
    actionsTable.add(stateAction6);
    actionsTable.add(stateAction7);
    actionsTable.add(stateAction8);
    actionsTable.add(stateAction9);
    actionsTable.add(stateAction10);
    actionsTable.add(stateAction11);
    actionsTable.add(stateAction12);
    actionsTable.add(stateAction13);
    actionsTable.add(stateAction14);
    actionsTable.add(stateAction15);
    actionsTable.add(stateAction16);
    actionsTable.add(stateAction17);
    actionsTable.add(stateAction18);
    actionsTable.add(stateAction19);
    actionsTable.add(stateAction20);
    actionsTable.add(stateAction21);
    actionsTable.add(stateAction22);
    actionsTable.add(stateAction23);
    actionsTable.add(stateAction24);
    actionsTable.add(stateAction25);
    actionsTable.add(stateAction26);
    actionsTable.add(stateAction27);
    actionsTable.add(stateAction28);
    actionsTable.add(stateAction29);
    actionsTable.add(stateAction30);
    actionsTable.add(stateAction31);
    actionsTable.add(stateAction32);
    actionsTable.add(stateAction33);
    actionsTable.add(stateAction34);
    actionsTable.add(stateAction35);
    actionsTable.add(stateAction36);
    actionsTable.add(stateAction37);
    actionsTable.add(stateAction38);
    actionsTable.add(stateAction39);
    actionsTable.add(stateAction40);
    actionsTable.add(stateAction41);
    actionsTable.add(stateAction42);
    actionsTable.add(stateAction43);
    actionsTable.add(stateAction44);
    actionsTable.add(stateAction45);
    actionsTable.add(stateAction46);
    actionsTable.add(stateAction47);
    actionsTable.add(stateAction48);
    actionsTable.add(stateAction49);
    actionsTable.add(stateAction50);
    actionsTable.add(stateAction51);
    actionsTable.add(stateAction52);
    actionsTable.add(stateAction53);
    actionsTable.add(stateAction54);
    actionsTable.add(stateAction55);
    actionsTable.add(stateAction56);
    actionsTable.add(stateAction57);
    actionsTable.add(stateAction58);
    actionsTable.add(stateAction59);
    actionsTable.add(stateAction60);
    actionsTable.add(stateAction61);
    actionsTable.add(stateAction62);
    actionsTable.add(stateAction63);
    actionsTable.add(stateAction64);
    actionsTable.add(stateAction65);
    actionsTable.add(stateAction66);
    actionsTable.add(stateAction67);
    actionsTable.add(stateAction68);
    actionsTable.add(stateAction69);
    actionsTable.add(stateAction70);
    actionsTable.add(stateAction71);
    actionsTable.add(stateAction72);
    actionsTable.add(stateAction73);
    actionsTable.add(stateAction74);
    actionsTable.add(stateAction75);
    actionsTable.add(stateAction76);
    actionsTable.add(stateAction77);
    actionsTable.add(stateAction78);
    actionsTable.add(stateAction79);
    actionsTable.add(stateAction80);
    actionsTable.add(stateAction81);
    actionsTable.add(stateAction82);
    actionsTable.add(stateAction83);
    actionsTable.add(stateAction84);
    actionsTable.add(stateAction85);

    //
    HashMap<String, Integer> stateSucc0 = new HashMap<>();
    stateSucc0.put("DEC", 1);
    HashMap<String, Integer> stateSucc1 = new HashMap<>();
    stateSucc1.put("LI", 3);
    stateSucc1.put("I", 4);
    HashMap<String, Integer> stateSucc4 = new HashMap<>();
    stateSucc4.put("LI", 11);
    stateSucc4.put("I", 4);
    HashMap<String, Integer> stateSucc8 = new HashMap<>();
    stateSucc8.put("E", 16);
    stateSucc8.put("F", 17);
    HashMap<String, Integer> stateSucc9 = new HashMap<>();
    stateSucc9.put("E", 22);
    stateSucc9.put("F", 17);
    HashMap<String, Integer> stateSucc12 = new HashMap<>();
    stateSucc12.put("E", 24);
    stateSucc12.put("F", 17);
    HashMap<String, Integer> stateSucc13 = new HashMap<>();
    stateSucc13.put("SIZE", 25);
    HashMap<String, Integer> stateSucc15 = new HashMap<>();
    stateSucc15.put("E", 29);
    stateSucc15.put("F", 17);
    HashMap<String, Integer> stateSucc16 = new HashMap<>();
    stateSucc16.put("OpArith", 31);
    stateSucc16.put("OpMod", 32);
    stateSucc16.put("OpRel", 33);
    stateSucc16.put("OpLogic", 34);
    HashMap<String, Integer> stateSucc18 = new HashMap<>();
    stateSucc18.put("E", 48);
    stateSucc18.put("F", 17);
    HashMap<String, Integer> stateSucc22 = new HashMap<>();
    stateSucc22.put("OpArith", 31);
    stateSucc22.put("OpMod", 32);
    stateSucc22.put("OpRel", 33);
    stateSucc22.put("OpLogic", 34);
    HashMap<String, Integer> stateSucc23 = new HashMap<>();
    stateSucc23.put("TYPE", 51);
    stateSucc23.put("TS", 52);
    HashMap<String, Integer> stateSucc24 = new HashMap<>();
    stateSucc24.put("OpArith", 31);
    stateSucc24.put("OpMod", 32);
    stateSucc24.put("OpRel", 33);
    stateSucc24.put("OpLogic", 34);
    HashMap<String, Integer> stateSucc29 = new HashMap<>();
    stateSucc29.put("OpArith", 31);
    stateSucc29.put("OpMod", 32);
    stateSucc29.put("OpRel", 33);
    stateSucc29.put("OpLogic", 34);
    HashMap<String, Integer> stateSucc30 = new HashMap<>();
    stateSucc30.put("LI", 60);
    stateSucc30.put("I", 4);
    HashMap<String, Integer> stateSucc31 = new HashMap<>();
    stateSucc31.put("F", 61);
    HashMap<String, Integer> stateSucc32 = new HashMap<>();
    stateSucc32.put("F", 62);
    HashMap<String, Integer> stateSucc33 = new HashMap<>();
    stateSucc33.put("F", 63);
    HashMap<String, Integer> stateSucc34 = new HashMap<>();
    stateSucc34.put("F", 64);
    HashMap<String, Integer> stateSucc48 = new HashMap<>();
    stateSucc48.put("OpArith", 31);
    stateSucc48.put("OpMod", 32);
    stateSucc48.put("OpRel", 33);
    stateSucc48.put("OpLogic", 34);
    HashMap<String, Integer> stateSucc49 = new HashMap<>();
    stateSucc49.put("SIZE", 66);
    HashMap<String, Integer> stateSucc50 = new HashMap<>();
    stateSucc50.put("LI", 67);
    stateSucc50.put("I", 4);
    HashMap<String, Integer> stateSucc68 = new HashMap<>();
    stateSucc68.put("DEC", 77);
    HashMap<String, Integer> stateSucc70 = new HashMap<>();
    stateSucc70.put("E", 79);
    stateSucc70.put("F", 17);
    HashMap<String, Integer> stateSucc74 = new HashMap<>();
    stateSucc74.put("LI", 80);
    stateSucc74.put("I", 4);
    HashMap<String, Integer> stateSucc79 = new HashMap<>();
    stateSucc79.put("OpArith", 31);
    stateSucc79.put("OpMod", 32);
    stateSucc79.put("OpRel", 33);
    stateSucc79.put("OpLogic", 34);
    HashMap<String, Integer> stateSucc84 = new HashMap<>();
    stateSucc84.put("TS", 85);

    //
    HashMap<String, Integer> stateSucc2 = new HashMap<>();
    HashMap<String, Integer> stateSucc3 = new HashMap<>();
    HashMap<String, Integer> stateSucc5 = new HashMap<>();
    HashMap<String, Integer> stateSucc6 = new HashMap<>();
    HashMap<String, Integer> stateSucc7 = new HashMap<>();
    HashMap<String, Integer> stateSucc10 = new HashMap<>();
    HashMap<String, Integer> stateSucc11 = new HashMap<>();
    HashMap<String, Integer> stateSucc14 = new HashMap<>();
    HashMap<String, Integer> stateSucc17 = new HashMap<>();
    HashMap<String, Integer> stateSucc19 = new HashMap<>();
    HashMap<String, Integer> stateSucc20 = new HashMap<>();
    HashMap<String, Integer> stateSucc21 = new HashMap<>();
    HashMap<String, Integer> stateSucc25 = new HashMap<>();
    HashMap<String, Integer> stateSucc26 = new HashMap<>();
    HashMap<String, Integer> stateSucc27 = new HashMap<>();
    HashMap<String, Integer> stateSucc28 = new HashMap<>();
    HashMap<String, Integer> stateSucc35 = new HashMap<>();
    HashMap<String, Integer> stateSucc36 = new HashMap<>();
    HashMap<String, Integer> stateSucc37 = new HashMap<>();
    HashMap<String, Integer> stateSucc38 = new HashMap<>();
    HashMap<String, Integer> stateSucc39 = new HashMap<>();
    HashMap<String, Integer> stateSucc40 = new HashMap<>();
    HashMap<String, Integer> stateSucc41 = new HashMap<>();
    HashMap<String, Integer> stateSucc42 = new HashMap<>();
    HashMap<String, Integer> stateSucc43 = new HashMap<>();
    HashMap<String, Integer> stateSucc44 = new HashMap<>();
    HashMap<String, Integer> stateSucc45 = new HashMap<>();
    HashMap<String, Integer> stateSucc46 = new HashMap<>();
    HashMap<String, Integer> stateSucc47 = new HashMap<>();
    HashMap<String, Integer> stateSucc51 = new HashMap<>();
    HashMap<String, Integer> stateSucc52 = new HashMap<>();
    HashMap<String, Integer> stateSucc53 = new HashMap<>();
    HashMap<String, Integer> stateSucc54 = new HashMap<>();
    HashMap<String, Integer> stateSucc55 = new HashMap<>();
    HashMap<String, Integer> stateSucc56 = new HashMap<>();
    HashMap<String, Integer> stateSucc57 = new HashMap<>();
    HashMap<String, Integer> stateSucc58 = new HashMap<>();
    HashMap<String, Integer> stateSucc59 = new HashMap<>();
    HashMap<String, Integer> stateSucc60 = new HashMap<>();
    HashMap<String, Integer> stateSucc61 = new HashMap<>();
    HashMap<String, Integer> stateSucc62 = new HashMap<>();
    HashMap<String, Integer> stateSucc63 = new HashMap<>();
    HashMap<String, Integer> stateSucc64 = new HashMap<>();
    HashMap<String, Integer> stateSucc65 = new HashMap<>();
    HashMap<String, Integer> stateSucc66 = new HashMap<>();
    HashMap<String, Integer> stateSucc67 = new HashMap<>();
    HashMap<String, Integer> stateSucc69 = new HashMap<>();
    HashMap<String, Integer> stateSucc71 = new HashMap<>();
    HashMap<String, Integer> stateSucc72 = new HashMap<>();
    HashMap<String, Integer> stateSucc73 = new HashMap<>();
    HashMap<String, Integer> stateSucc75 = new HashMap<>();
    HashMap<String, Integer> stateSucc76 = new HashMap<>();
    HashMap<String, Integer> stateSucc77 = new HashMap<>();
    HashMap<String, Integer> stateSucc78 = new HashMap<>();
    HashMap<String, Integer> stateSucc80 = new HashMap<>();
    HashMap<String, Integer> stateSucc81 = new HashMap<>();
    HashMap<String, Integer> stateSucc82 = new HashMap<>();
    HashMap<String, Integer> stateSucc83 = new HashMap<>();
    HashMap<String, Integer> stateSucc85 = new HashMap<>();

    //
    succTable.add(stateSucc0);
    succTable.add(stateSucc1);
    succTable.add(stateSucc2);
    succTable.add(stateSucc3);
    succTable.add(stateSucc4);
    succTable.add(stateSucc5);
    succTable.add(stateSucc6);
    succTable.add(stateSucc7);
    succTable.add(stateSucc8);
    succTable.add(stateSucc9);
    succTable.add(stateSucc10);
    succTable.add(stateSucc11);
    succTable.add(stateSucc12);
    succTable.add(stateSucc13);
    succTable.add(stateSucc14);
    succTable.add(stateSucc15);
    succTable.add(stateSucc16);
    succTable.add(stateSucc17);
    succTable.add(stateSucc18);
    succTable.add(stateSucc19);
    succTable.add(stateSucc20);
    succTable.add(stateSucc21);
    succTable.add(stateSucc22);
    succTable.add(stateSucc23);
    succTable.add(stateSucc24);
    succTable.add(stateSucc25);
    succTable.add(stateSucc26);
    succTable.add(stateSucc27);
    succTable.add(stateSucc28);
    succTable.add(stateSucc29);
    succTable.add(stateSucc30);
    succTable.add(stateSucc31);
    succTable.add(stateSucc32);
    succTable.add(stateSucc33);
    succTable.add(stateSucc34);
    succTable.add(stateSucc35);
    succTable.add(stateSucc36);
    succTable.add(stateSucc37);
    succTable.add(stateSucc38);
    succTable.add(stateSucc39);
    succTable.add(stateSucc40);
    succTable.add(stateSucc41);
    succTable.add(stateSucc42);
    succTable.add(stateSucc43);
    succTable.add(stateSucc44);
    succTable.add(stateSucc45);
    succTable.add(stateSucc46);
    succTable.add(stateSucc47);
    succTable.add(stateSucc48);
    succTable.add(stateSucc49);
    succTable.add(stateSucc50);
    succTable.add(stateSucc51);
    succTable.add(stateSucc52);
    succTable.add(stateSucc53);
    succTable.add(stateSucc54);
    succTable.add(stateSucc55);
    succTable.add(stateSucc56);
    succTable.add(stateSucc57);
    succTable.add(stateSucc58);
    succTable.add(stateSucc59);
    succTable.add(stateSucc60);
    succTable.add(stateSucc61);
    succTable.add(stateSucc62);
    succTable.add(stateSucc63);
    succTable.add(stateSucc64);
    succTable.add(stateSucc65);
    succTable.add(stateSucc66);
    succTable.add(stateSucc67);
    succTable.add(stateSucc68);
    succTable.add(stateSucc69);
    succTable.add(stateSucc70);
    succTable.add(stateSucc71);
    succTable.add(stateSucc72);
    succTable.add(stateSucc73);
    succTable.add(stateSucc74);
    succTable.add(stateSucc75);
    succTable.add(stateSucc76);
    succTable.add(stateSucc77);
    succTable.add(stateSucc78);
    succTable.add(stateSucc79);
    succTable.add(stateSucc80);
    succTable.add(stateSucc81);
    succTable.add(stateSucc82);
    succTable.add(stateSucc83);
    succTable.add(stateSucc84);
    succTable.add(stateSucc85);
  }
}
